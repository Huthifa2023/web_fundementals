INSERT INTO users(first_name, last_name, created_at, updated_at)
VALUES ('Amy','Giver',NOW(),NOW()),('Eli','Byers',NOW(),NOW()),('Big','Bird',NOW(),NOW()),
('Kermit','The Frog',NOW(),NOW()),('Marky','Mark',NOW(),NOW()), ('Huthifa','Alqasim',NOW(),NOW());


INSERT INTO friendships(user_id,friend_id)
VALUES(1,2),(1,4),(1,6);


INSERT INTO friendships(user_id,friend_id)
VALUES(2,1),(1,3),(1,5);


INSERT INTO friendships(user_id,friend_id)
VALUES(3,2),(3,5);


INSERT INTO friendships(user_id,friend_id)
VALUES(4,3);


INSERT INTO friendships(user_id,friend_id)
VALUES(5,6),(5,1);


INSERT INTO friendships(user_id,friend_id)
VALUES(6,2),(6,3);


SELECT users.first_name, users.last_name, users2.first_name AS friend_first_name, users2.last_name AS friend_last_name
FROM users
JOIN friendships ON users.id = friendships.user_id
JOIN users AS users2 ON users2.id = friendships.friend_id;



SELECT users.first_name, users.last_name, GROUP_CONCAT(users2.first_name , ' ' , users2.last_name) AS friends
FROM users
JOIN friendships ON users.id = friendships.user_id
JOIN users AS users2 ON users2.id = friendships.friend_id
WHERE users.id = 1
GROUP BY users.id;


SELECT COUNT(id) AS total_friendships FROM friendships;



SELECT user_id , COUNT(*) AS have_most_friends_of_total
FROM friendships
GROUP BY user_id
order by COUNT(*) DESC
LIMIT 1;
-- count(*) returns the number of rows in selected coloumn!!!!!!!!!!!!!!!!!!



SELECT users.first_name , users.last_name, users2.first_name AS friendFirstName, users2.last_name AS fiendLastNAme
FROM users
JOIN friendships ON users.id = friendships.user_id
JOIN users AS users2 ON users2.id = friendships.friend_id
WHERE users.id =3
ORDER BY users2.first_name;









